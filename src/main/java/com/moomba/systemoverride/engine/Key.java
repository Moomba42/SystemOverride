package com.moomba.systemoverride.engine;

import java.util.HashMap;
import java.util.Map;

import org.lwjgl.glfw.GLFW;

public enum Key {
    KEY_UNKNOWN(GLFW.GLFW_KEY_UNKNOWN),
    KEY_SPACE(GLFW.GLFW_KEY_SPACE),
    KEY_APOSTROPHE(GLFW.GLFW_KEY_APOSTROPHE),
    KEY_COMMA(GLFW.GLFW_KEY_COMMA),
    KEY_MINUS(GLFW.GLFW_KEY_MINUS),
    KEY_PERIOD(GLFW.GLFW_KEY_PERIOD),
    KEY_SLASH(GLFW.GLFW_KEY_SLASH),
    KEY_DIGIT_0(GLFW.GLFW_KEY_0),
    KEY_DIGIT_1(GLFW.GLFW_KEY_1),
    KEY_DIGIT_2(GLFW.GLFW_KEY_2),
    KEY_DIGIT_3(GLFW.GLFW_KEY_3),
    KEY_DIGIT_4(GLFW.GLFW_KEY_4),
    KEY_DIGIT_5(GLFW.GLFW_KEY_5),
    KEY_DIGIT_6(GLFW.GLFW_KEY_6),
    KEY_DIGIT_7(GLFW.GLFW_KEY_7),
    KEY_DIGIT_8(GLFW.GLFW_KEY_8),
    KEY_DIGIT_9(GLFW.GLFW_KEY_9),
    KEY_SEMICOLON(GLFW.GLFW_KEY_SEMICOLON),
    KEY_EQUALS(GLFW.GLFW_KEY_EQUAL),
    KEY_LETTER_A(GLFW.GLFW_KEY_A),
    KEY_LETTER_B(GLFW.GLFW_KEY_B),
    KEY_LETTER_C(GLFW.GLFW_KEY_C),
    KEY_LETTER_D(GLFW.GLFW_KEY_D),
    KEY_LETTER_E(GLFW.GLFW_KEY_E),
    KEY_LETTER_F(GLFW.GLFW_KEY_F),
    KEY_LETTER_G(GLFW.GLFW_KEY_G),
    KEY_LETTER_H(GLFW.GLFW_KEY_H),
    KEY_LETTER_I(GLFW.GLFW_KEY_I),
    KEY_LETTER_J(GLFW.GLFW_KEY_J),
    KEY_LETTER_K(GLFW.GLFW_KEY_K),
    KEY_LETTER_L(GLFW.GLFW_KEY_L),
    KEY_LETTER_M(GLFW.GLFW_KEY_M),
    KEY_LETTER_N(GLFW.GLFW_KEY_N),
    KEY_LETTER_O(GLFW.GLFW_KEY_O),
    KEY_LETTER_P(GLFW.GLFW_KEY_P),
    KEY_LETTER_Q(GLFW.GLFW_KEY_Q),
    KEY_LETTER_R(GLFW.GLFW_KEY_R),
    KEY_LETTER_S(GLFW.GLFW_KEY_S),
    KEY_LETTER_T(GLFW.GLFW_KEY_T),
    KEY_LETTER_U(GLFW.GLFW_KEY_U),
    KEY_LETTER_V(GLFW.GLFW_KEY_V),
    KEY_LETTER_W(GLFW.GLFW_KEY_W),
    KEY_LETTER_X(GLFW.GLFW_KEY_X),
    KEY_LETTER_Y(GLFW.GLFW_KEY_Y),
    KEY_LETTER_Z(GLFW.GLFW_KEY_Z),
    KEY_LEFT_BRACKET(GLFW.GLFW_KEY_LEFT_BRACKET),
    KEY_BACKSLASH(GLFW.GLFW_KEY_BACKSLASH),
    KEY_RIGHT_BRACKET(GLFW.GLFW_KEY_RIGHT_BRACKET),
    KEY_GRAVE_ACCENT(GLFW.GLFW_KEY_GRAVE_ACCENT),
    KEY_ESCAPE(GLFW.GLFW_KEY_ESCAPE),
    KEY_ENTER(GLFW.GLFW_KEY_ENTER),
    KEY_TAB(GLFW.GLFW_KEY_TAB),
    KEY_BACKSPACE(GLFW.GLFW_KEY_BACKSPACE),
    KEY_INSERT(GLFW.GLFW_KEY_INSERT),
    KEY_DELETE(GLFW.GLFW_KEY_DELETE),
    KEY_RIGHT(GLFW.GLFW_KEY_RIGHT),
    KEY_LEFT(GLFW.GLFW_KEY_LEFT),
    KEY_DOWN(GLFW.GLFW_KEY_DOWN),
    KEY_UP(GLFW.GLFW_KEY_UP),
    KEY_PAGE_UP(GLFW.GLFW_KEY_PAGE_UP),
    KEY_PAGE_DOWN(GLFW.GLFW_KEY_DOWN),
    KEY_HOME(GLFW.GLFW_KEY_HOME),
    KEY_END(GLFW.GLFW_KEY_END),
    KEY_CAPS_LOCK(GLFW.GLFW_KEY_CAPS_LOCK),
    KEY_SCROLL_LOCK(GLFW.GLFW_KEY_SCROLL_LOCK),
    KEY_NUM_LOCK(GLFW.GLFW_KEY_NUM_LOCK),
    KEY_PRINT_SCREEN(GLFW.GLFW_KEY_PRINT_SCREEN),
    KEY_PAUSE(GLFW.GLFW_KEY_PAUSE),
    KEY_F1(GLFW.GLFW_KEY_F1),
    KEY_F2(GLFW.GLFW_KEY_F2),
    KEY_F3(GLFW.GLFW_KEY_F3),
    KEY_F4(GLFW.GLFW_KEY_F4),
    KEY_F5(GLFW.GLFW_KEY_F5),
    KEY_F6(GLFW.GLFW_KEY_F6),
    KEY_F7(GLFW.GLFW_KEY_F7),
    KEY_F8(GLFW.GLFW_KEY_F8),
    KEY_F9(GLFW.GLFW_KEY_F9),
    KEY_F10(GLFW.GLFW_KEY_F10),
    KEY_F11(GLFW.GLFW_KEY_F11),
    KEY_F12(GLFW.GLFW_KEY_F12),
    KEY_F13(GLFW.GLFW_KEY_F13),
    KEY_F14(GLFW.GLFW_KEY_F14),
    KEY_F15(GLFW.GLFW_KEY_F15),
    KEY_F16(GLFW.GLFW_KEY_F16),
    KEY_F17(GLFW.GLFW_KEY_F17),
    KEY_F18(GLFW.GLFW_KEY_F18),
    KEY_F19(GLFW.GLFW_KEY_F19),
    KEY_F20(GLFW.GLFW_KEY_F20),
    KEY_F21(GLFW.GLFW_KEY_F21),
    KEY_F22(GLFW.GLFW_KEY_F22),
    KEY_F23(GLFW.GLFW_KEY_F23),
    KEY_F24(GLFW.GLFW_KEY_F24),
    KEY_F25(GLFW.GLFW_KEY_F25),
    KEY_NUMPAD_0(GLFW.GLFW_KEY_KP_0),
    KEY_NUMPAD_1(GLFW.GLFW_KEY_KP_1),
    KEY_NUMPAD_2(GLFW.GLFW_KEY_KP_2),
    KEY_NUMPAD_3(GLFW.GLFW_KEY_KP_3),
    KEY_NUMPAD_4(GLFW.GLFW_KEY_KP_4),
    KEY_NUMPAD_5(GLFW.GLFW_KEY_KP_5),
    KEY_NUMPAD_6(GLFW.GLFW_KEY_KP_6),
    KEY_NUMPAD_7(GLFW.GLFW_KEY_KP_7),
    KEY_NUMPAD_8(GLFW.GLFW_KEY_KP_8),
    KEY_NUMPAD_9(GLFW.GLFW_KEY_KP_9),
    KEY_NUMPAD_DECIMAL(GLFW.GLFW_KEY_KP_DECIMAL),
    KEY_NUMPAD_DIVIDE(GLFW.GLFW_KEY_KP_DIVIDE),
    KEY_NUMPAD_MULTIPLY(GLFW.GLFW_KEY_KP_MULTIPLY),
    KEY_NUMPAD_SUBTRACT(GLFW.GLFW_KEY_KP_SUBTRACT),
    KEY_NUMPAD_ADD(GLFW.GLFW_KEY_KP_ADD),
    KEY_NUMPAD_ENTER(GLFW.GLFW_KEY_KP_ENTER),
    KEY_NUMPAD_EQUALS(GLFW.GLFW_KEY_KP_EQUAL),
    KEY_LEFT_SHIFT(GLFW.GLFW_KEY_LEFT_SHIFT),
    KEY_LEFT_CONTROL(GLFW.GLFW_KEY_LEFT_CONTROL),
    KEY_LEFT_ALT(GLFW.GLFW_KEY_LEFT_ALT),
    KEY_LEFT_META(GLFW.GLFW_KEY_LEFT_SUPER),
    KEY_RIGHT_SHIFT(GLFW.GLFW_KEY_RIGHT_SHIFT),
    KEY_RIGHT_CONTROL(GLFW.GLFW_KEY_RIGHT_CONTROL),
    KEY_RIGHT_ALT(GLFW.GLFW_KEY_RIGHT_ALT),
    KEY_RIGHT_META(GLFW.GLFW_KEY_RIGHT_SUPER),
    KEY_MENU(GLFW.GLFW_KEY_MENU);

    private static final Map<Integer,Key> keyMap;
    private final int glfwKeycode;

    static {
        keyMap = new HashMap<>();
        for(final Key key:values()) {
            keyMap.put(key.glfwKeycode, key);
        }
    }

    Key(int glfwKeycode) {
        this.glfwKeycode = glfwKeycode;
    }

    public static Key getKeyForGLWFKeycode(int keycode){
        return keyMap.get(keycode);
    }

    public static Key getKeyForGLWFKeycode(int keycode, Key defaul){
        return keyMap.getOrDefault(keycode, defaul);
    }

    public int getGLWFKeycode(){
        return glfwKeycode;
    }

}